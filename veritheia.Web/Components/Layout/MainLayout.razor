@using Microsoft.AspNetCore.Components.Web
@using veritheia.Web.Components.Layout
@using veritheia.Web.Services
@inject RenderContextService ContextService
@inject NavigationManager Navigation
@inherits LayoutComponentBase

@if (isAuthenticated)
{
    <div class="app">
        <div class="app-container">
            <SidebarNavigation />
            <main class="main-content">
                <TopBar />
                <div class="content-area">
                    @Body
                </div>
            </main>
        </div>
    </div>
}
else
{
    @Body
}

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool isAuthenticated = false;
    private RenderContext? context;

    protected override void OnInitialized()
    {
        context = ContextService.GetOrCreateContext();
        context.RequireCurrentUser();
    }

    protected override async Task OnParametersSetAsync()
    {
        // Reset context for new render cycle
        ContextService.Reset();
        
        // Get new context and declare needs
        context = ContextService.GetOrCreateContext();
        context.RequireCurrentUser();

        // Let child components declare needs
        await base.OnParametersSetAsync();

        // Single bulk load after all demands registered
        await ContextService.InitializeContextAsync();

        isAuthenticated = context.CurrentUser != null;
        
        // Redirect to login if not authenticated and not already on login page
        if (!isAuthenticated && !Navigation.Uri.EndsWith("/login"))
        {
            Navigation.NavigateTo("/login");
        }
    }
}