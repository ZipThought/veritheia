@using veritheia.Web.Services
@inject AuthenticationService AuthService
@inject NavigationManager Navigation

<div class="top-bar">
    <div class="top-bar-content">
        <div class="user-info">
            <span class="user-name">@currentUserName</span>
            <div class="persona-selector">
                <select class="persona-dropdown" @onchange="OnPersonaChanged">
                    <option value="researcher">Researcher ▼</option>
                    <option value="student">Student ▼</option>
                    <option value="entrepreneur">Entrepreneur ▼</option>
                </select>
            </div>
        </div>
        
        <div class="top-bar-actions">
            <button class="action-button" @onclick="OpenSettings">
                <span>Settings</span>
            </button>
            <button class="action-button" @onclick="OpenHelp">
                <span>Help</span>
            </button>
            <button class="action-button logout" @onclick="Logout">
                <span>Logout</span>
            </button>
        </div>
    </div>
</div>

@code {
    private string currentUserName = "Loading...";
    private string selectedPersona = "researcher";

    protected override async Task OnInitializedAsync()
    {
        await LoadCurrentUser();
    }

    private async Task LoadCurrentUser()
    {
        try
        {
            var user = await AuthService.GetCurrentUserAsync();
            if (user != null)
            {
                currentUserName = user.DisplayName;
            }
            else
            {
                Navigation.NavigateTo("/login");
            }
        }
        catch
        {
            Navigation.NavigateTo("/login");
        }
    }

    private async Task OnPersonaChanged(ChangeEventArgs e)
    {
        selectedPersona = e.Value?.ToString() ?? "researcher";
        // TODO: Update user's active persona context
        StateHasChanged();
    }

    private async Task OpenSettings()
    {
        // TODO: Navigate to settings or open settings modal
    }

    private async Task OpenHelp()
    {
        // TODO: Navigate to help or open help modal
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}
